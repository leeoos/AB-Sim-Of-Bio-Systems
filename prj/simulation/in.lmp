# Agent Based Simulation Of Biological Systems


#       --- SET UP OF INPUT VARIABLES ---

# duration : int = N number of steps for the current run
variable time_value index 50  # default value: 50 loop * 100 steps
variable loop_len equal ${time_value}

# atoms : int = N number of atoms of each type to generate 
# uncomment this lines and substitue the number of atoms
# in the create_atoms command with this variable 
# to modify the initial amount of atoms in the simulation;
# prj/run.sh -h for more info
# Note: doing so the initial amount will be the same for all atoms types
#variable num_atoms index 5
#variable atoms equal ${num_atoms}


#       --- SIMULATION BOX PROPERTIES ---

# sym measure units and atoms style
units       lj
atom_style  full 

# box dimension, boudaries and structure
dimension   3  
boundary    f f f 
lattice     fcc 3.52

# flag2 = on or off for bonded interactions
newton on off

# define simulation box
region      box block 0 30 0 30 0 30
create_box  8 box  bond/types 21 extra/bond/per/atom 100

# create simulation walls
fix xwalls all wall/reflect xlo EDGE xhi EDGE
fix ywalls all wall/reflect ylo EDGE yhi EDGE
fix zwalls all wall/reflect zlo EDGE zhi EDGE


#       --- AGENTS PROPRETIES AND FORCE FIELDS ---
# creation of atoms of types in randoms spots inside the box
create_atoms    1 random 4 5783 box  # S_d     | reactant |      | product  |
create_atoms    2 random 2 5784 box  # E_d     | reactant |      | product  |
create_atoms    3 random 1 5785 box  # I_d     | reactant |      | product  |
create_atoms    4 random 2 5786 box  # R_d     | reactant |      | product  |
create_atoms    5 random 2 5787 box  # S_h     | reactant |      | product  |
create_atoms    6 random 3 5788 box  # E_h     | reactant |      | product  |
create_atoms    7 random 9 5789 box  # I_h     | reactant |      | product  |
create_atoms    8 random 2 5790 box  # R_h     | reactant |      | product  |

# atoms mass
mass 1 1.0
mass 2 1.0
mass 3 1.0
mass 4 1.0
mass 5 1.0
mass 6 1.0
mass 7 1.0
mass 8 1.0

# assing atoms to agents groups
group agents2 type 4 
group agents3 type 2 
group agents4 type 1 
group agents6 type 2 
group agents9 type 1 
group agents10 type 2 
group agents14 type 8 
group agents15 type 6 
group agents17 type 5 
group agents18 type 6 
group agents20 type 6 
group mortals type 1 2 3 3 4 5 6 7 7 8 

# force fields style and coefficient
pair_style zero 5.0
pair_coeff * *

# bond style and coefficients
bond_style  harmonic
bond_coeff * 100 1.1

 
#      --- SIMULATION ---

# set time steps 
timestep 0.001   # seconds

# This command sets parameters that affect
# the building of pairwise neighbor lists
neighbor 0.001 bin
neigh_modify every 10 delay 100

# print thermodinamic inf every N timesteps
thermo 100 

# fix ID group-ID bond/create Nevery itype jtype Rmin bondtype keyword values
# this fix will attempt to create new bond btw atoms of type i and j every N timestep

# set velocity for all atoms
velocity all create 300.0 4928459 rot yes dist gaussian 

# perform plain time integration 
# to update position and velocity
# and simulate Brownioan motion
fix 1 all nve
fix 2 all langevin 300.0 300.0 10.0 904297

# compute if atoms has a bonds
# and total number of bonds btw all atoms
compute hb0 all property/atom nbonds 

compute hb1 agents1 property/atom nbonds
compute cb1 agents1 reduce sum c_hb1

compute hb2 agents2 property/atom nbonds
compute cb2 agents2 reduce sum c_hb2

compute hb3 agents3 property/atom nbonds
compute cb3 agents3 reduce sum c_hb3

compute hb4 agents4 property/atom nbonds
compute cb4 agents4 reduce sum c_hb4

compute hb6 agents6 property/atom nbonds
compute cb6 agents6 reduce sum c_hb6

compute hb9 agents9 property/atom nbonds
compute cb9 agents9 reduce sum c_hb9

compute hb10 agents10 property/atom nbonds
compute cb10 agents10 reduce sum c_hb10

compute hb13 agents13 property/atom nbonds
compute cb13 agents13 reduce sum c_hb13

compute hb14 agents14 property/atom nbonds
compute cb14 agents14 reduce sum c_hb14

compute hb15 agents15 property/atom nbonds
compute cb15 agents15 reduce sum c_hb15

compute hb17 agents17 property/atom nbonds
compute cb17 agents17 reduce sum c_hb17

compute hb18 agents18 property/atom nbonds
compute cb18 agents18 reduce sum c_hb18

compute hb20 agents20 property/atom nbonds
compute cb20 agents20 reduce sum c_hb20


# this lines are necessary to insure that the “hasbond” and 'newatoms' 
# variables are current when the group command invokes it.
thermo_style custom step temp pe c_cb1 c_cb2 c_cb3 c_cb4 c_cb6 c_cb9 c_cb10 c_cb13 c_cb14 c_cb15 c_cb17 c_cb18 c_cb20 
run 0

# hasbond : boolean = true if atom I has a bond with atom J
variable hasbond atom 'c_hb0 > 0.0'


# counter : int = N total number of bonds in the sim
variable counter1 equal ceil(c_cb1)
variable counter2 equal ceil(c_cb2)
variable counter3 equal ceil(c_cb3)
variable counter4 equal ceil(c_cb4)
variable counter6 equal ceil(c_cb6)
variable counter9 equal ceil(c_cb9)
variable counter10 equal ceil(c_cb10)
variable counter13 equal ceil(c_cb13)
variable counter14 equal ceil(c_cb14)
variable counter15 equal ceil(c_cb15)
variable counter17 equal ceil(c_cb17)
variable counter18 equal ceil(c_cb18)
variable counter20 equal ceil(c_cb20)

# print themo info every timestep
thermo_style custom step temp pe v_counter1 v_counter2 v_counter3 v_counter4 v_counter6 v_counter9 v_counter10 v_counter13 v_counter14 v_counter15 v_counter17 v_counter18 v_counter20 

# dumps atoms information
dump 1 all custom 10 dump.Model.out id x y z type 


#       --- LOOP---

label loop
variable step loop ${loop_len}   # loop length

# create new atoms only if new bonds have been made
# the num of new atoms is linked to the number of new bonds as follow:
# fix ID group-ID deposit N type M seed keyword values
fix deposit1 all deposit 1 1 1 5748 region box near 2.0
variable newatoms2 equal floor(${counter2}/2)
if '${counter2} > 0' then &
'fix deposit1 all deposit ${newatoms2} 1 1 5748 region box near 2.0' 
variable newatoms3 equal floor(${counter3}/2)
if '${counter3} > 0' then &
'fix deposit1 all deposit ${newatoms3} 1 1 5748 region box near 2.0' 
variable newatoms4 equal floor(${counter4}/2)
if '${counter4} > 0' then &
'fix deposit2 all deposit ${newatoms4} 2 1 5748 region box near 2.0' 
variable newatoms6 equal floor(${counter6}/2)
if '${counter6} > 0' then &
'fix deposit3 all deposit ${newatoms6} 3 1 5748 region box near 2.0' 
variable newatoms9 equal floor(${counter9}/2)
if '${counter9} > 0' then &
'fix deposit4 all deposit ${newatoms9} 4 1 5748 region box near 2.0' 
variable newatoms10 equal floor(${counter10}/2)
if '${counter10} > 0' then &
'fix deposit4 all deposit ${newatoms10} 4 1 5748 region box near 2.0' 
fix deposit13 all deposit 1 5 1 5748 region box near 2.0
variable newatoms14 equal floor(${counter14}/2)
if '${counter14} > 0' then &
'fix deposit5 all deposit ${newatoms14} 5 1 5748 region box near 2.0' 
variable newatoms15 equal floor(${counter15}/2)
if '${counter15} > 0' then &
'fix deposit5 all deposit ${newatoms15} 5 1 5748 region box near 2.0' 
variable newatoms17 equal floor(${counter17}/2)
if '${counter17} > 0' then &
'fix deposit6 all deposit ${newatoms17} 6 1 5748 region box near 2.0' 
variable newatoms18 equal floor(${counter18}/2)
if '${counter18} > 0' then &
'fix deposit7 all deposit ${newatoms18} 7 1 5748 region box near 2.0' 
variable newatoms20 equal floor(${counter20}/2)
if '${counter20} > 0' then &
'fix deposit8 all deposit ${newatoms20} 8 1 5748 region box near 2.0' 

# assing all atoms that have a bond to the garbage group
group garbage dynamic all every 1 var hasbond

# append new values on dump file
dump_modify 1 append yes

# perform n steps in loop
run 100

# delate all atoms in garbage
delete_atoms group garbage bond yes mol yes compress no

# delate some atoms in mortals every N timestamps 
# fix ID group-ID evaporate N M region-ID seed 
fix death mortals evaporate 100 1 box 5791

# jump to loop lable until step > 0 
next step
jump SELF loop

# end of loop
label break

# check on input variables
variable duration equal ${loop_len}*100
print ''
print 'Starting Atoms: 25 ' 
print 'Duration: ${duration}'
print 'ALL DONE' 

