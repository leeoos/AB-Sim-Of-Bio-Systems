# Agent Based Simulation Of Biological Systems


#       --- SET UP OF INPUT VARIABLES ---

# duration : int = N number of steps for the current run
variable time_value index 50  # default value: 50 loop * 100 steps
variable loop_len equal ${time_value}
variable duration equal ${loop_len}*100

# atoms : int = N number of atoms of each type to generate 
# uncomment this lines and substitue the number of atoms
# in the create_atoms command with this variable 
# to modify the initial amount of atoms in the simulation;
# prj/run.sh -h for more info
# Note: doing so the initial amount will be the same for all atoms types
#variable num_atoms index 5
#variable atoms equal ${num_atoms}


#       --- SIMULATION BOX PROPERTIES ---

# sym measure units and atoms style
units       lj
atom_style  full 

# box dimension, boudaries and structure
dimension   3  
boundary    f f f 
lattice     fcc 3.52

# flag2 = on or off for bonded interactions
newton on off

# define simulation box
region      box block 0 30 0 30 0 30
create_box  3 box  bond/types 1 extra/bond/per/atom 100

# create simulation walls
fix xwalls all wall/reflect xlo EDGE xhi EDGE
fix ywalls all wall/reflect ylo EDGE yhi EDGE
fix zwalls all wall/reflect zlo EDGE zhi EDGE


#       --- AGENTS PROPRETIES AND FORCE FIELDS ---
# creation of atoms of types in randoms spots inside the box
create_atoms    1 random 6 5783 box  # s1     | reactant |
create_atoms    2 random 6 5784 box  # s2     | reactant |
create_atoms    3 random 0 5785 box  # s3      | product  |

# atoms mass
mass 1 1.0
mass 2 1.0
mass 3 1.0

# assing atoms to agents groups
group agents1 type 1 2 

# force fields style and coefficient
pair_style zero 5.0
pair_coeff * *

# bond style and coefficients
bond_style  harmonic
bond_coeff * 100 1.1

 
#      --- SIMULATION ---

# set the time step, from now on every time an N
# appears in the signature of an instruction it should
# be read as N * 0.1 = number of time steps
timestep 0.1   # seconds

# this command sets parameters that affect
# the building of pairwise neighbor lists
neighbor 0.001 bin
neigh_modify every 10 delay 100

# print thermodinamic inf every N timesteps
thermo 100 

# this fix will attempt to create new bond btw atoms of type i and j every N timestep
# fix ID group-ID bond/create Nevery itype jtype Rmin bondtype keyword values
fix bond_1_2 all bond/create 10 1 2 1.0 1 prob 0.5 5786

# set velocity for all atoms
velocity all create 300.0 4928459 rot yes dist gaussian 

# perform plain time integration 
# to update position and velocity
# and simulate Brownioan motion
fix 1 all nve
fix 2 all langevin 300.0 300.0 10.0 904297

# compute if atoms has a bonds
# and total number of bonds btw all atoms
compute hb0 all property/atom nbonds 

compute hb1 agents1 property/atom nbonds
compute cb1 agents1 reduce sum c_hb1


# this lines are necessary to insure that the “hasbond” and 'newatoms' 
# variables are current when the group command invokes it.
thermo_style custom step temp pe c_cb1 
run 0

# hasbond : boolean = true if atom I has a bond with atom J
variable hasbond atom 'c_hb0 > 0.0'


# counter : int = N total number of bonds in the sim
variable counter1 equal ceil(c_cb1)

# print themo info every timestep
thermo_style custom step temp pe v_counter1 

# dumps atoms information
dump 1 all custom 10 dump.simple.out id x y z type 


#       --- LOOP---

label loop
variable step loop ${loop_len}   # loop length

# insert a single atom or molecule into the simulation domain
# every M timesteps until N atoms or molecules have been inserted
# the num of new atoms is linked to the number of new bonds as follow:
# fix ID group-ID deposit N type M seed keyword values
variable newatoms1 equal floor(${counter1}/2)
if '${counter1} > 0' then &
'fix deposit3_0 all deposit ${newatoms1} 3 7 5748 region box near 2.0' 


# assing all atoms that have a bond to the garbage group
update group every N timesteps
group garbage dynamic all every 1 var hasbond

# append new values on dump file
dump_modify 1 append yes

# perform n steps in loop
run 100

# delate all atoms in garbage
delete_atoms group garbage bond yes mol yes compress no

# jump to loop lable until step > 0 
next step
jump SELF loop

# end of loop
label break

# print some useful resumed informations
print ''
print 'Starting Atoms: 12 ' 
print 'Duration: ${duration}'
print 'ALL DONE' 

