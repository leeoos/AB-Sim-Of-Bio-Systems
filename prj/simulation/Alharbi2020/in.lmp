# Agent Based Simulation Of Biological Systems


#       --- SET UP OF INPUT VARIABLES ---

# steps : int = number of steps to execute
variable time_value index 10000  # default value: 10000
variable steps equal ${time_value}

# duration : int = simulation steps * dump interval
#for the current run
variable duration equal ${steps}*0.1

# uncomment the last 2 lines of this section and
# substitue the number of atoms in the create_atoms command with ${atoms} 
# to modify the initial amount of atoms in the simulation;
# prj/run.sh -h for more info
# Note: doing so the initial amount will be the same for all atoms types
# atoms : int = N number of atoms of each type to generate 
#variable num_atoms index 5
#variable atoms equal ${num_atoms}


#       --- SIMULATION BOX PROPERTIES ---

# sym measure units and atoms style
units       lj
atom_style  full 

# box dimension, boudaries and structure
dimension   3  
boundary    f f f 
lattice     fcc 3.52

# flag2 = on or off for bonded interactions
newton on off

# define simulation box
region      box block 0 30 0 30 0 30
create_box  3 box  bond/types 1 extra/bond/per/atom 100

# create simulation walls
fix xwalls all wall/reflect xlo EDGE xhi EDGE
fix ywalls all wall/reflect ylo EDGE yhi EDGE
fix zwalls all wall/reflect zlo EDGE zhi EDGE


#       --- AGENTS PROPRETIES AND FORCE FIELDS ---

# creation of atoms of types in randoms spots inside the box
create_atoms    1 random 1 5783 box  # Normal_cells     | reactant |      | product  |
create_atoms    2 random 1 5784 box  # Tumor_cells     | reactant |      | product  |
create_atoms    3 random 2 5785 box  # Immune_cells     | reactant |      | product  |

# atoms mass
mass 1 1.0
mass 2 1.0
mass 3 1.0

# force fields style and coefficient
pair_style zero 5.0
pair_coeff * *

# bond style and coefficients
bond_style  harmonic
bond_coeff * 100 1.1

 
#      --- SIMULATION ---

# set the time step for the simulation
# it is directly proportional to the atoms velocity
# AB-Sim-Of-Bio-Systems/resources/Tesi.pdf for more info
timestep 0.001   # abstract units : seconds

# this command sets parameters that affect
# the building of pairwise neighbor lists
neighbor 0.001 bin
neigh_modify every 10 delay 100

# print thermodinamic inf every N timesteps
thermo 100 


# set velocity for all atoms
velocity all create 300.0 4928459 rot yes dist gaussian 

# perform plain time integration 
# to update position and velocity
# and simulate Brownioan motion
fix kin all nve
fix lgv all langevin 300.0 300.0 10.0 904297


#        ---COMPUTES--- 

# comupe which atoms should be inhibid 
# by checking their type and kin energy 
compute atype all property/atom type 
compute akin all ke/atom 

# toInhibid : Boolean = true if atom I is
# perishable and has a low kin value 
variable toInhibid atom '( c_atype == 1 ||  c_atype == 2 ||  c_atype == 3) & 
&& c_akin < 100.0'


#        ---DINAMICS GROUPS--- 
# note: this section could be empty

# assing some perishable atoms to the inhibit group 
# update group every N timesteps 
group inhibid dynamic all every 10 var toInhibid 


#        ---DUMP FILE--- 

# dump atoms information every 10 timestep
# dump ID group-ID style N file args
dump d1 all custom 10 dump.Alharbi2020.out id x y z type 


#        ---DEPOSIT--- 

# insert a single atom or molecule into the simulation domain 
# every N timesteps until M atoms or molecules have been inserted 
# fix ID group-ID deposit M type N seed keyword values 
fix deposit1_0 all deposit ${duration} 1 185 5786 region box near 2.0
fix deposit2_0 all deposit ${duration} 2 123 5787 region box near 2.0
fix deposit3_0 all deposit ${duration} 3 342 5788 region box near 2.0


#        ---RUN--- 
# uncomment this line to append
# new values on dump file in case 
# it is not updating properly 
# dump_modify d1 append yes 

# allow atoms lost during the simulation 
thermo_modify lost ignore 
run ${steps} every 100 &
   'delete_atoms group inhibid compress no' 

#        ---END--- 

# print some useful informations 
print '' 
print 'INFO' 
print 'Starting Atoms: 4 ' 
print 'Duration: ${duration}' 
print 'ALL DONE' 
